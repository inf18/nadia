/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * transaksi.java
 *
 * Created on May 22, 2017, 5:10:18 AM
 */
package tiketkonser;

import com.mysql.jdbc.Connection;
import com.mysql.jdbc.PreparedStatement;
import java.io.File;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.HashMap;
import java.util.Map;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;
import javax.swing.text.AttributeSet;
import javax.swing.text.BadLocationException;
import javax.swing.text.PlainDocument;
import net.sf.jasperreports.engine.JasperCompileManager;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.JasperReport;
import net.sf.jasperreports.engine.design.JasperDesign;
import net.sf.jasperreports.engine.xml.JRXmlLoader;
import net.sf.jasperreports.view.JasperViewer;

/**
 *
 * @author Nadia
 */
public class transaksi extends javax.swing.JFrame {
    public DefaultTableModel tabModel;
    Connection conn; 
        String host="localhost";
        String db="tiketkonser";
        String user="root";
        String pass=""; 
    
    int beli,bayar,total,kembalian,harga;

    /** Creates new form transaksi */
    public transaksi() {
        initComponents();
        setJTable();
        
        TxtNama.setDocument(new JTextFieldFilter(JTextFieldFilter.huruf));
        TxtJumlah.setDocument(new JTextFieldFilter(JTextFieldFilter.numeric));
        TxtHarga.setDocument(new JTextFieldFilter(JTextFieldFilter.numeric));
        TxtBayar.setDocument(new JTextFieldFilter(JTextFieldFilter.numeric));
        TxtKembalian.setDocument(new JTextFieldFilter(JTextFieldFilter.numeric));
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        TxtCari = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        TxtTanggal = new javax.swing.JTextField();
        TxtNo = new javax.swing.JTextField();
        TxtNama = new javax.swing.JTextField();
        TxtHarga = new javax.swing.JTextField();
        TxtBayar = new javax.swing.JTextField();
        BTambah = new javax.swing.JButton();
        BProses = new javax.swing.JButton();
        BEdit = new javax.swing.JButton();
        BBatal = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        TPemesanan = new javax.swing.JTable();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        cbCari = new javax.swing.JComboBox();
        TxtKembalian = new javax.swing.JTextField();
        bCari = new javax.swing.JButton();
        bRefresh = new javax.swing.JButton();
        bCetak = new javax.swing.JButton();
        bKeluar = new javax.swing.JButton();
        jLabel12 = new javax.swing.JLabel();
        TxtJumlah = new javax.swing.JTextField();
        cbKelas = new javax.swing.JComboBox();
        jLabel13 = new javax.swing.JLabel();
        cbTiket = new javax.swing.JComboBox();
        jLabel2 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setText("Tanggal");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 10, -1, -1));
        getContentPane().add(TxtCari, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 310, 120, -1));

        jLabel3.setText("No Tiket");
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 40, 50, -1));

        jLabel4.setText("Nama");
        getContentPane().add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 70, -1, -1));

        jLabel5.setText("Kelas");
        getContentPane().add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 100, -1, -1));

        jLabel6.setText("Jenis Tiket");
        getContentPane().add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 130, 70, -1));

        jLabel7.setText("Harga");
        getContentPane().add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 70, 40, -1));

        jLabel8.setText("Bayar");
        getContentPane().add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 100, 40, -1));

        jLabel9.setText("Cari Berdasarkan");
        getContentPane().add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 310, 110, -1));

        TxtTanggal.setEditable(false);
        getContentPane().add(TxtTanggal, new org.netbeans.lib.awtextra.AbsoluteConstraints(530, 10, 120, -1));

        TxtNo.setEditable(false);
        TxtNo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TxtNoActionPerformed(evt);
            }
        });
        getContentPane().add(TxtNo, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 40, 140, -1));
        getContentPane().add(TxtNama, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 70, 140, -1));

        TxtHarga.setEditable(false);
        TxtHarga.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TxtHargaActionPerformed(evt);
            }
        });
        getContentPane().add(TxtHarga, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 70, 150, -1));

        TxtBayar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TxtBayarActionPerformed(evt);
            }
        });
        getContentPane().add(TxtBayar, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 100, 150, -1));

        BTambah.setFont(new java.awt.Font("PMingLiU-ExtB", 0, 14));
        BTambah.setText("Tambah");
        BTambah.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BTambahActionPerformed(evt);
            }
        });
        getContentPane().add(BTambah, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 160, 90, -1));

        BProses.setFont(new java.awt.Font("PMingLiU-ExtB", 0, 14));
        BProses.setText("Simpan");
        BProses.setEnabled(false);
        BProses.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BProsesActionPerformed(evt);
            }
        });
        getContentPane().add(BProses, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 160, 90, -1));

        BEdit.setFont(new java.awt.Font("PMingLiU-ExtB", 0, 14));
        BEdit.setText("Edit");
        BEdit.setEnabled(false);
        BEdit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BEditActionPerformed(evt);
            }
        });
        getContentPane().add(BEdit, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 160, 90, -1));

        BBatal.setFont(new java.awt.Font("PMingLiU-ExtB", 0, 14));
        BBatal.setText("Batal");
        BBatal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BBatalActionPerformed(evt);
            }
        });
        getContentPane().add(BBatal, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 160, 90, -1));

        TPemesanan.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(TPemesanan);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 210, 650, 90));

        jLabel10.setText("Kembalian");
        getContentPane().add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 130, 60, -1));

        jLabel11.setText("Lihat Data");
        getContentPane().add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 190, 60, -1));

        cbCari.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "No Tiket", "Nama", "Kelas", "Jenis Tiket" }));
        getContentPane().add(cbCari, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 310, 90, -1));

        TxtKembalian.setEditable(false);
        TxtKembalian.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TxtKembalianActionPerformed(evt);
            }
        });
        getContentPane().add(TxtKembalian, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 130, 150, -1));

        bCari.setText("Cari");
        bCari.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bCariActionPerformed(evt);
            }
        });
        getContentPane().add(bCari, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 310, -1, -1));

        bRefresh.setText("Refresh");
        bRefresh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bRefreshActionPerformed(evt);
            }
        });
        getContentPane().add(bRefresh, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 310, -1, -1));

        bCetak.setText("Cetak Tiket");
        bCetak.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bCetakActionPerformed(evt);
            }
        });
        getContentPane().add(bCetak, new org.netbeans.lib.awtextra.AbsoluteConstraints(500, 310, -1, -1));

        bKeluar.setText("Keluar");
        bKeluar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bKeluarActionPerformed(evt);
            }
        });
        getContentPane().add(bKeluar, new org.netbeans.lib.awtextra.AbsoluteConstraints(600, 310, -1, -1));

        jLabel12.setText("Jumlah Tiket");
        getContentPane().add(jLabel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 40, 90, -1));

        TxtJumlah.setEditable(false);
        TxtJumlah.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TxtJumlahActionPerformed(evt);
            }
        });
        getContentPane().add(TxtJumlah, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 40, 150, -1));

        cbKelas.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Pilih Kelas", "festival", "tribun" }));
        cbKelas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbKelasActionPerformed(evt);
            }
        });
        getContentPane().add(cbKelas, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 100, 140, -1));

        jLabel13.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/bg-transaksi-bismillah-kanan.png"))); // NOI18N
        getContentPane().add(jLabel13, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 0, -1, -1));

        cbTiket.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Pilih Jenis Tiket", "Presale 1", "Presale 2", "Presale 3", "OTS" }));
        cbTiket.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbTiketActionPerformed(evt);
            }
        });
        getContentPane().add(cbTiket, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 130, 140, -1));

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/bg-transaksi-bismillah-kiri.png"))); // NOI18N
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

        pack();
    }// </editor-fold>//GEN-END:initComponents

private void TxtNoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TxtNoActionPerformed
// TODO add your handling code here:
}//GEN-LAST:event_TxtNoActionPerformed

private void TxtBayarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TxtBayarActionPerformed
// TODO add your handling code here:
    bayar=Integer.parseInt(TxtBayar.getText());
    harga=Integer.parseInt(TxtHarga.getText());
    kembalian= bayar - harga;
    TxtKembalian.setText(String.valueOf(kembalian));
}//GEN-LAST:event_TxtBayarActionPerformed

private void BTambahActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BTambahActionPerformed
// TODO add your handling code here:
    idoto();
    
    Date tgl_sekarang=new Date();
        SimpleDateFormat format=new SimpleDateFormat("yyyy/MM/dd");
        String tgl=format.format(tgl_sekarang);
        TxtTanggal.setText(tgl);
    
        TxtTanggal.setEnabled(false);
        TxtNo.setEnabled(false);
        TxtNama.setEnabled(true);
        cbKelas.setEnabled(true);
        cbTiket.setEnabled(true);
        TxtJumlah.setEnabled(false);
        TxtHarga.setEnabled(false);
        TxtBayar.setEnabled(true);
        TxtKembalian.setEnabled(false);
        
        BProses.setText("Simpan");

        BTambah.setEnabled(false);
        BProses.setEnabled(true);
        BEdit.setEnabled(true);
        BBatal.setEnabled(true);
}//GEN-LAST:event_BTambahActionPerformed

private void BProsesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BProsesActionPerformed
// TODO add your handling code here:
    penguranganstok();
    if(BProses.getText().equalsIgnoreCase("Simpan"))
            simpanData();
        else
            rubahData();

        TxtTanggal.setEnabled(false);
        TxtNo.setEnabled(false);
        TxtNama.setEnabled(false);
        cbKelas.setEnabled(false);
        cbTiket.setEnabled(false);
        TxtJumlah.setEnabled(false);
        TxtHarga.setEnabled(false);
        TxtBayar.setEnabled(false);
        TxtKembalian.setEnabled(false);
      
        BTambah.setEnabled(true);
        BEdit.setEnabled(false);
        BProses.setEnabled(false);
        BBatal.setEnabled(false);
}//GEN-LAST:event_BProsesActionPerformed

private void BEditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BEditActionPerformed
// TODO add your handling code here:
    TxtTanggal.setEnabled(false);     
        TxtNo.setEnabled(false); 
        TxtNama.setEnabled(true);     
        cbKelas.setEnabled(true);
        cbTiket.setEnabled(true);
        TxtJumlah.setEnabled(true); 
        TxtHarga.setEnabled(true);
        TxtBayar.setEnabled(true);     
        TxtKembalian.setEnabled(false);     

        BProses.setText("Update");
        
        BTambah.setEnabled(false);
        BProses.setEnabled(true);
        BEdit.setEnabled(false);
        BBatal.setEnabled(true);

        ambilData_dari_JTable();
}//GEN-LAST:event_BEditActionPerformed

private void BBatalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BBatalActionPerformed
// TODO add your handling code here:
    TxtTanggal.setText("");
    TxtNo.setText("");
    TxtNama.setText("");
    cbKelas.setSelectedItem("Pilih Kelas");
    cbTiket.setSelectedItem("Pilih Jenis Tiket");
    TxtJumlah.setText("");
    TxtHarga.setText("");
    TxtBayar.setText("");
    TxtKembalian.setText("");
    TxtCari.setText("");

       // Mengatur  Enable Tombol Dan Textfield  
        TxtTanggal.setEnabled(false);
        TxtNo.setEnabled(false);
        TxtNama.setEnabled(false);
        cbKelas.setEnabled(false);
        cbTiket.setEnabled(false);
        TxtJumlah.setEnabled(false);
        TxtHarga.setEnabled(false);
        TxtBayar.setEnabled(false);
        TxtKembalian.setEnabled(false);
 
        BTambah.setEnabled(true);
        BProses.setEnabled(false);
        BEdit.setEnabled(false);
        BBatal.setEnabled(false);
}//GEN-LAST:event_BBatalActionPerformed

private void TxtKembalianActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TxtKembalianActionPerformed
// TODO add your handling code here:
}//GEN-LAST:event_TxtKembalianActionPerformed

private void bCariActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bCariActionPerformed
// TODO add your handling code here:
    String sql = null;
        int pilih = cbCari.getSelectedIndex();
        String cari = TxtCari.getText();
    try {
        conn.close();
         Class.forName("com.mysql.jdbc.Driver");
        conn  =(Connection) DriverManager.getConnection("jdbc:mysql://"+host+"/"+db+"?user="+user+"&password="+pass); 
        if(pilih==0){
        sql ="Select * from transaksi WHERE no_tiket ='" +TxtCari.getText() + "'";
        }else if(pilih==1){
        sql ="Select * from transaksi WHERE nama Like '%" +TxtCari.getText() + "%'";
        }else if(pilih==2){
        sql ="Select * from transaksi WHERE kelas Like '%" +TxtCari.getText() + "%'";
        }else if(pilih==3){
        sql ="Select * from transaksi WHERE jenis_tiket Like '%" +TxtCari.getText() + "%'";
        }

        PreparedStatement st = (PreparedStatement) conn.prepareStatement(sql);
        ResultSet rs =st.executeQuery();

        hapusIsiJTable();
        int no=0;
        while (rs.next()) {
            no++;
             String Tanggal = rs.getString("tanggal_transaksi");
             String No = rs.getString("no_tiket");
             String Nama = rs.getString("nama");
             String Kelas = rs.getString("kelas");
             String Jenis = rs.getString("jenis_tiket");
             String Jumlah = rs.getString("jumlah");
             String Harga = rs.getString("harga");
             String Bayar = rs.getString("bayar");
             String Kembalian = rs.getString("kembalian");
             Object [] data = {no,Tanggal, No, Nama, Kelas, Jenis, Jumlah, Harga, Bayar, Kembalian};
             tabModel.addRow(data);
        }

         if(tabModel.getRowCount()>0)         
           JOptionPane.showMessageDialog(this,"Data Ditemukan ");        
        else
            JOptionPane.showMessageDialog(this,"Data Tidak Ditemukan.. ");

      }
      catch (ClassNotFoundException se) {}  // Silahkan tambahkan sendiri informasi eksepsi
      catch (SQLException se) {}
}//GEN-LAST:event_bCariActionPerformed

private void bRefreshActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bRefreshActionPerformed
// TODO add your handling code here:
    TxtTanggal.setText("");
    TxtNo.setText("");
    TxtNama.setText("");
    cbKelas.setSelectedItem("Pilih Kelas");
    cbTiket.setSelectedItem("Pilih Jenis Tiket");
    TxtJumlah.setText("");
    TxtHarga.setText("");
    TxtBayar.setText("");
    TxtKembalian.setText("");
    TxtCari.setText("");
    
    tampilDataKeJTable();
}//GEN-LAST:event_bRefreshActionPerformed

private void bCetakActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bCetakActionPerformed
// TODO add your handling code here:
    cetak();
}//GEN-LAST:event_bCetakActionPerformed

private void bKeluarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bKeluarActionPerformed
// TODO add your handling code here:
    int answer = JOptionPane.showConfirmDialog(null, "Thanks", "Selesai", JOptionPane.OK_OPTION);
    if (answer == JOptionPane.OK_OPTION){
    }
    
        dispose();
}//GEN-LAST:event_bKeluarActionPerformed

private void cbTiketActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbTiketActionPerformed
// TODO add your handling code here:
    String sql;
    try{
        Class.forName("com.mysql.jdbc.Driver");
        conn=(Connection) DriverManager.getConnection("jdbc:mysql://"+host+"/"+db+"?user="+user+"&password="+pass);
        sql="Select * from tiket where jenis_tiket = '" + cbTiket.getSelectedItem()+ "'";
        PreparedStatement st= (PreparedStatement) conn.prepareStatement(sql);  // import java.sql.PreparedStatement
        ResultSet rs=st.executeQuery();   // import java.sql.ResultSet;
        
        
        while (rs.next()){
            TxtJumlah.setText("");
            TxtHarga.setText("");
            String harga = rs.getString("harga");
            TxtJumlah.setText("1");
            TxtHarga.setText(harga);
        
        }
    }
    catch (ClassNotFoundException se) {}
    catch (SQLException se) {}
}//GEN-LAST:event_cbTiketActionPerformed

private void cbKelasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbKelasActionPerformed
// TODO add your handling code here:
}//GEN-LAST:event_cbKelasActionPerformed

private void TxtJumlahActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TxtJumlahActionPerformed
// TODO add your handling code here:
}//GEN-LAST:event_TxtJumlahActionPerformed

private void TxtHargaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TxtHargaActionPerformed
// TODO add your handling code here:
}//GEN-LAST:event_TxtHargaActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(transaksi.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(transaksi.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(transaksi.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(transaksi.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                new transaksi().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BBatal;
    private javax.swing.JButton BEdit;
    private javax.swing.JButton BProses;
    private javax.swing.JButton BTambah;
    private javax.swing.JTable TPemesanan;
    private javax.swing.JTextField TxtBayar;
    private javax.swing.JTextField TxtCari;
    private javax.swing.JTextField TxtHarga;
    private javax.swing.JTextField TxtJumlah;
    private javax.swing.JTextField TxtKembalian;
    private javax.swing.JTextField TxtNama;
    private javax.swing.JTextField TxtNo;
    private javax.swing.JTextField TxtTanggal;
    private javax.swing.JButton bCari;
    private javax.swing.JButton bCetak;
    private javax.swing.JButton bKeluar;
    private javax.swing.JButton bRefresh;
    private javax.swing.JComboBox cbCari;
    private javax.swing.JComboBox cbKelas;
    private javax.swing.JComboBox cbTiket;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables

    private void getData(){
  
  try{
        Class.forName("com.mysql.jdbc.Driver");
        conn=(Connection) DriverManager.getConnection("jdbc:mysql://"+host+"/"+db+"?user="+user+"&password="+pass);
        String sql="Select * from transaksi";
        PreparedStatement st=(PreparedStatement) conn.prepareStatement(sql);
        ResultSet rs=st.executeQuery();

       // Menampilkan ke JTable  melalui tabModel
        String Tanggal,No,Nama,Kelas,Jenis,Jumlah,Harga,Bayar,Kembalian;
        int no=0;
        while(rs.next()){
         no=no+1;
         Tanggal=rs.getString("tanggal_transaksi");
         No=rs.getString("no_tiket");
         Nama=rs.getString("nama");
         Kelas=rs.getString("kelas");
         Jenis=rs.getString("jenis_tiket");
         Jumlah=rs.getString("jumlah");
         Harga=rs.getString("harga");
         Bayar=rs.getString("bayar");
         Kembalian=rs.getString("kembalian");

         Object Data[]={no,Tanggal,No,Nama,Kelas,Jenis,Jumlah,Harga,Bayar,Kembalian};
         tabModel.addRow(Data);
        }
          // Tutup Koneksi
          st.close();
          conn.close();
    }
    catch (ClassNotFoundException cnfe) {         // Ketika Gagal Memanggil Driver
           System.out.println("Class Driver tidak ditemukan.. : " + cnfe);
           System.exit(0);
    }
    catch (SQLException sqle) {                   // Ketika Gagal Sql   // import java.sql.SQLException
           System.out.println("Proses Query Gagal = " + sqle);
           System.exit(0);
    }
    catch(Exception e){
           System.out.println("Koneksi Access Gagal " +e.getMessage());
           System.exit(0);
    }

    }    // Akhir Method getData

public void idoto()  {
        try {
            int b=0;
                         int c=0;
                         int d=1;
                         String idnya=("T"+b+c+d);
                         try {
                             Class.forName("com.mysql.jdbc.Driver");
                         } catch (ClassNotFoundException ex) {
                             Logger.getLogger(transaksi.class.getName()).log(Level.SEVERE, null, ex);
                         }
                         conn = (Connection) DriverManager.getConnection("jdbc:mysql://localhost/tiketkonser?user=root&password="); 
                         
                         String sql;
                         sql ="Select * from transaksi";
                         PreparedStatement st = (PreparedStatement) conn.prepareStatement(sql);
                         ResultSet rs =st.executeQuery();
                         while (rs.next()) {
                              String tiket = rs.getString("no_tiket");
                              if (idnya.equals(tiket)){
                                  d=d+1;
                                  idnya=("T"+b+c+d);
                              }else{
                                  
                              }
                                 TxtNo.setText(idnya);
                         }
        } catch (SQLException ex) {
            Logger.getLogger(transaksi.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    
private void setJTable(){
    String [] JudulKolom={"No","Tanggal Transaksi","No Tiket","Nama","Kelas","Jenis Tiket","Jumlah Tiket","Harga","Bayar","Kembalian"};
    tabModel = new DefaultTableModel(null, JudulKolom){
                  boolean[] canEdit = new boolean [] { false, false, false, false, false, false, false, false, false, false};
                  @Override
                  public boolean isCellEditable(int rowIndex, int columnIndex) {
                   return canEdit [columnIndex];
                  }
              };
    TPemesanan.setModel(tabModel);
    TPemesanan.setAutoResizeMode(JTable.AUTO_RESIZE_OFF);
    TPemesanan.getColumnModel().getColumn(0).setPreferredWidth(30);
    TPemesanan.getColumnModel().getColumn(1).setPreferredWidth(100);
    TPemesanan.getColumnModel().getColumn(2).setPreferredWidth(100);
    TPemesanan.getColumnModel().getColumn(3).setPreferredWidth(100);
    TPemesanan.getColumnModel().getColumn(4).setPreferredWidth(100);
    TPemesanan.getColumnModel().getColumn(5).setPreferredWidth(100);
    TPemesanan.getColumnModel().getColumn(6).setPreferredWidth(100);
    TPemesanan.getColumnModel().getColumn(7).setPreferredWidth(100);
    TPemesanan.getColumnModel().getColumn(8).setPreferredWidth(100);
    TPemesanan.getColumnModel().getColumn(9).setPreferredWidth(100);

    getData();

}// Akhir Method setJTable

public void hapusIsiJTable() {
    int row = tabModel.getRowCount();
    for (int i = 0; i < row; i++) {
      tabModel.removeRow(0);
    }
  }
//  Method Untuk Menampilkan Data dari tabel Anggota Ke JTable
public void tampilDataKeJTable() {
    hapusIsiJTable();
    try {
        conn.close();
        Class.forName("com.mysql.jdbc.Driver");
        conn=(Connection) DriverManager.getConnection("jdbc:mysql://"+host+"/"+db+"?user="+user+"&password="+pass);   
        String sql="Select * from transaksi";
        PreparedStatement st=(PreparedStatement) conn.prepareStatement(sql);
        ResultSet rs=st.executeQuery();
        String Tanggal,No,Nama,Kelas,Jenis,Jumlah,Harga,Bayar,Kembalian;
        int no=0;
        while(rs.next()){
         no=no+1;
         Tanggal=rs.getString("tanggal_transaksi");
         No=rs.getString("no_tiket");
         Nama=rs.getString("nama");
         Kelas=rs.getString("kelas");
         Jenis=rs.getString("jenis_tiket");
         Jumlah=rs.getString("jumlah");
         Harga=rs.getString("harga");
         Bayar=rs.getString("bayar");
         Kembalian=rs.getString("kembalian");
         
         Object Data[]={no,Tanggal,No,Nama,Kelas,Jenis,Jumlah,Harga,Bayar,Kembalian};
         tabModel.addRow(Data);
      }
  }
    catch (Exception e) {}
}

void ambilData_dari_JTable() {
    int row = TPemesanan.getSelectedRow();

    // Mengambil data yang dipilih pada JTable
    String Tanggal = tabModel.getValueAt(row, 1).toString();
    String No = tabModel.getValueAt(row, 2).toString();
    String Nama = tabModel.getValueAt(row, 3).toString();
    String Kelas = tabModel.getValueAt(row, 4).toString();
    String Jenis = tabModel.getValueAt(row, 5).toString();
    String Jumlah = tabModel.getValueAt(row, 6).toString();
    String Harga = tabModel.getValueAt(row, 7).toString();
    String Bayar = tabModel.getValueAt(row, 8).toString();
    String Kembalian = tabModel.getValueAt(row, 9).toString();
    
    TxtTanggal.setText(Tanggal);
    TxtNo.setText(No);
    TxtNama.setText(Nama);
    cbKelas.setSelectedItem(Kelas);
    cbTiket.setSelectedItem(Jenis);
    TxtJumlah.setText(Jumlah);
    TxtHarga.setText(Harga);
    TxtBayar.setText(Bayar);
    TxtKembalian.setText(Kembalian);
    
    BBatal.setEnabled(true);
  }

public void rubahData() {
    // Konfirmasi sebelum melakukan perubahan data
    int ok = JOptionPane.showConfirmDialog(this,
        "Anda Yakin Ingin Mengubah Data\n Dengan No Tiket = '" + TxtNo.getText() +
        "'", "Konfirmasi ",JOptionPane.YES_NO_OPTION);
    // Apabila tombol Yes ditekan
    if (ok == 0) {
      try {
        Class.forName("sun.jdbc.odbc.JdbcOdbcDriver");
            conn=(Connection) DriverManager.getConnection("jdbc:mysql://"+host+"/"+db+"?user="+user+"&password="+pass);
        String sql ="UPDATE transaksi SET tanggal_transaksi = ?, nama = ?, kelas= ?, jenis_tiket = ?, jumlah = ?, harga = ?, bayar = ?, kembalian = ? WHERE no_tiket = ?";
        PreparedStatement st = (PreparedStatement) conn.prepareStatement(sql);
        try {
          st.setString(1, TxtTanggal.getText());
          st.setString(2, TxtNama.getText());
          st.setObject(3, cbKelas.getSelectedItem());
          st.setObject(4, cbTiket.getSelectedItem());
          st.setString(5, TxtJumlah.getText());
          st.setString(6, TxtHarga.getText());
          st.setString(7, TxtBayar.getText());
          st.setString(8, TxtKembalian.getText());
          st.setString(9, TxtNo.getText());
          st.executeUpdate();

         // Memanggil Method   tampilDataKeJTable();
          tampilDataKeJTable();

          TxtTanggal.setText("");
          TxtNo.setText("");
          TxtNama.setText("");
          cbKelas.setSelectedItem("");
          cbTiket.setSelectedItem("");
          TxtJumlah.setText("");
          TxtHarga.setText("");
          TxtBayar.setText("");
          TxtKembalian.setText("");
        } catch (SQLException se) { }     // Silahkan tambahkan Sendiri informasi Eksepsi
      } catch (ClassNotFoundException se) {} // Silahkan tambahkan Sendiri informasi Eksepsi
      catch (SQLException se) {}  // Silahkan tambahkan Sendiri informasi Eksepsi
    }
    
  }


public void simpanData(){
     try{
            Class.forName("sun.jdbc.odbc.JdbcOdbcDriver");
            conn=(Connection) DriverManager.getConnection("jdbc:mysql://"+host+"/"+db+"?user="+user+"&password="+pass);
            String sql="Insert into transaksi values(?,?,?,?,?,?,?,?,?)";
            PreparedStatement st=(PreparedStatement) conn.prepareStatement(sql);
                st.setString(1, TxtTanggal.getText());
                st.setString(2, TxtNo.getText());
                st.setString(3, TxtNama.getText());
                st.setObject(4, cbKelas.getSelectedItem());
                st.setObject(5, cbTiket.getSelectedItem());
                st.setString(6, TxtJumlah.getText());
                st.setString(7, TxtHarga.getText());
                st.setString(8, TxtBayar.getText());
                st.setString(9, TxtKembalian.getText());
            int rs=st.executeUpdate();

            if(rs>0){
            JOptionPane.showMessageDialog(this,"Input Berhasil");
      	   setJTable();
            }
            st.close();
            conn.close();
        }
        catch (ClassNotFoundException cnfe) {
           System.out.println("Class Driver tidak ditemukan.. : " + cnfe);
        }
        catch (SQLException sqle) {
           System.out.println("Input  Gagal = " + sqle.getMessage());
        }
        catch(Exception e){
           System.out.println("Gagal Tuh.. Bego Lu " +e.getMessage());
        }
  }

public void penguranganstok(){
    try{
        Class.forName("com.mysql.jdbc.Driver");
        conn = (Connection) DriverManager.getConnection("jdbc:mysql://"+host+"/"+db+"?user="+user+"&password="+pass); 
            
        //ini ngambil stocknya, terus dikurangin sama banyaknya pembelian
        int dikurang = 0;
        String sto="select*from tiket where jenis_tiket='" + cbTiket.getSelectedItem() + "'";
        PreparedStatement sr = (PreparedStatement) conn.prepareStatement(sto);
        ResultSet rz =sr.executeQuery();
        while (rz.next()) {
            int stock = Integer.valueOf(rz.getString("stok"));
            int jumlah = Integer.valueOf(TxtJumlah.getText()); 
            dikurang = stock - jumlah;
        }
        conn.close();
        Class.forName("com.mysql.jdbc.Driver");
        conn = (Connection) DriverManager.getConnection("jdbc:mysql://"+host+"/"+db+"?user="+user+"&password="+pass); 
        
        //stock barang diupdate
        String di_kurang = Integer.toString(dikurang);
        if(dikurang<0){
        JOptionPane.showMessageDialog(this,"stok kurang");
        }else{
            String ba="update tiket set Stok=? where jenis_tiket='" + cbTiket.getSelectedItem() + "'";
        PreparedStatement be = (PreparedStatement) conn.prepareStatement(ba);
        try {
            be.setString(1, di_kurang);
            be.executeUpdate();
        } catch (SQLException se) { }
        
        be.close();
        conn.close();
        Class.forName("com.mysql.jdbc.Driver");
        conn =  (Connection) DriverManager.getConnection("jdbc:mysql://"+host+"/"+db+"?user="+user+"&password="+pass); 
        }
        //masukin ke table transaksi
        }catch (ClassNotFoundException cnfe) {
           System.out.println("Class Driver tidak ditemukan.. : " + cnfe);
        }
        catch (SQLException sqle) {
           System.out.println("Input  Gagal = " + sqle.getMessage());
        }
        catch(Exception e){
           System.out.println("Gagal Tuh.. Bego Lu " +e.getMessage());
        }
    }

void cetak(){
    JasperReport jasRep;
    JasperPrint jasPri;
    Map<String, Object> Nama = new HashMap<String, Object>();
    JasperDesign jasDes;
    
    try {
        Class.forName("com.mysql.jdbc.Driver");
        conn=(Connection) DriverManager.getConnection("jdbc:mysql://"+host+"/"+db+"?user="+user+"&password="+pass);
        
        File report = new  File("cetak.jrxml");
        jasDes = JRXmlLoader.load(report);
        Nama.put("no_tiket", TxtCari.getText());
        jasRep = JasperCompileManager.compileReport(jasDes);
        jasPri = JasperFillManager.fillReport(jasRep, Nama, conn);
        JasperViewer.viewReport(jasPri, false);
            //JasperPrintManager,printReport(jasPri, true);
    } catch (Exception e) {
        JOptionPane.showMessageDialog(null, e.getMessage());
    }
}

class JTextFieldFilter extends PlainDocument {

    public static final String numeric = "0123456789";
    public static final String huruf = " abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXXYZ";
    public static final String alamat = " 0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXXYZ.-()";
    protected String acceptedChars = null;
    protected boolean negativeAccepted = false;

    public JTextFieldFilter(String acceptedchars) {
    acceptedChars = acceptedchars;
    }

    public void setNegativeAccepted(boolean negativeaccepted) {
    if (acceptedChars.equals(numeric) || (acceptedChars.equals(huruf))){
    negativeAccepted = negativeaccepted;
    acceptedChars += "-";
    }

    }

    @Override
    public void insertString(int offset, String str, AttributeSet attr) throws BadLocationException {
    if (str == null)
    return;

    for (int i = 0; i < str.length(); i++) {
    if (acceptedChars.indexOf(str.valueOf(str.charAt(i))) == -1)
    return;
    }

    if (negativeAccepted && str.indexOf("-") != -1) {
    if (str.indexOf("-") != 0 || offset != 0) {
    return;
    }
    }

    super.insertString(offset, str, attr);
    }
    }
}
